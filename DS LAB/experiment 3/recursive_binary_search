# AIM OF THE EXPERIMENT
   write a program using recursive function for binary search
# BRIEF DESCRPITION OF BINARY SEARCH
• Sequential search algorithm is very slow if list contains more number of elements
• If the array is not sorted ,linear search is the only solution.
• If the list is sorted , we can use a more efficient algorithm called the binary search
• We should use a binary search whenever the list starts to become large.
• The binary search starts by testing the data in the element at the middle of the list.
• This determines if the target is in first half or second half of the list.
• If it is in first half , we do not need to check the second half.
• If it is in second half , we do not need to check the first half.
• In other words ,either way we eliminate half the list from further consideration.
• We repeat this process until we find the target or satisfy ourselves that it is not in the list.
• To find the middle of the list we three variables,
one to identify the beginning of the list(first)
one to identify the beginning of the list(mid)
one to identify the beginning of the list(last)
one to identify the beginning of the list(last)
mid=( first + last )/2
#step by step procedure explaining each output:
First we have to sort the array ,after sorting we array is
Array=[3,6,8,10,14,15,20,30,66,99]
For output 1 the key value we need to be search 6
For output 2 the key value we need to search 14
For output 3 the key value we need to search 99
By using loops and conditions we can obtain the output
First we find the mid value mid value= low+high/2
If key value is less than mid value ,we use mid-1
If key value is greater than mid value ,we use mid +1
At last in output we enter the element it to be found it gives its index or array value
If the element is not in the list of the array its gives not found or error
output obtained
|[output](binaryrecursion1.jpg)(binaryrecursion2.jpg)(binaryrecursion3.jpg)



